// Zed settings
//
// For information on how to configure Zed, see the Zed
// documentation: https://zed.dev/docs/configuring-zed
//
// To see all of Zed's default settings without changing your
// custom settings, run the `open default settings` command
// from the command palette or from `Zed` application menu.
{
  // Visual Settings
  "theme": "Catppuccin Mocha",
  "icon_theme": "Catppuccin Mocha",
  "buffer_font_family": "Monaspace Xenon",
  "buffer_font_size": 14,
  "ui_font_size": 16,
  "buffer_font_features": {
    "ss01": true,
    "ss02": true,
    "ss03": true,
    "ss04": true,
    "ss05": true,
    "ss06": true,
    "ss07": true,
    "ss08": true,
    "calt": true,
    "dlig": true
  },
  "wrap_guides": [80, 120],
  "current_line_highlight": "all",
  "active_pane_modifiers": {
    "inactive_opacity": 0.6,
    "border_size": 0.3,
    "magnification": 1.0
  },
  "use_system_path_prompts": false,
  "use_system_prompts": false,
  "terminal": {
    "button": true,
    "font_family": "FiraCode Nerd Font Mono",
    "font_size": 16,
    "line_height": "standard",
    "detect_venv": {
      "on": {
        "activate_script": "default",
        "directories": [".venv", "venv"]
      }
    }
  },
  "scrollbar": {
    "show": "auto"
  },
  "tabs": {
    "file_icons": false,
    "git_status": true,
    "show_close_button": "hidden",
    "show_diagnostics": "errors",
    "activate_on_close": "history"
  },
  "tab_bar": {
    "show": true,
    "show_tab_bar_buttons": true,
    "show_nav_history_buttons": false
  },
  "notification_panel": {
    "enabled": true,
    "button": false
  },
  "chat_panel": {
    "button": "when_in_call"
  },
  "collaboration_panel": {
    "button": true
  },
  "search": {
    "button": true
  },
  "minimap": { "show": "never" },
  "indent_guides": {
    "enabled": true,
    "coloring": "indent_aware",
    "background_coloring": "disabled"
  },

  // Ensure some extensions are always installed as the config reliest on them
  "auto_install_extensions": {
    "catppuccin": true,
    "catppuccin-icons": true,
    "just": true,
    "rainbow-csv": true,
    "ruff": true
  },

  // Vim mode setup
  "vim_mode": true,
  "vim": {
    "use_system_clipboard": "on_yank",
    "use_multiline_find": false,
    "cursor_shape": {
      "normal": "block",
      "insert": "bar",
      "replace": "underline",
      "visual": "hollow"
    }
  },
  "cursor_blink": false,
  "relative_line_numbers": true,
  "scroll_beyond_last_line": "off",
  "command_aliases": {
    "W": "w",
    "Wq": "wq",
    "Q": "q"
  },

  // Zed inner workings.
  "on_last_window_closed": "quit_app",
  "restore_on_startup": "last_workspace",
  "use_autoclose": true,
  "format_on_save": "on",
  "auto_indent_on_paste": true,
  "extend_comment_on_newline": false,
  "inlay_hints": {
    "enabled": true
  },

  // AI
  "show_edit_predictions": true,
  "edit_predictions": {
    "mode": "subtle",
    "enabled_in_text_threads": true
  },
  "features": {
    "edit_prediction_provider": "zed"
  },
  "agent": {
    "button": true,
    "always_allow_tool_actions": true,
    "default_profile": "write",
    "version": "2"
  },
  "context_servers": {},

  // Git
  "git": {
    "git_gutter": "tracked_files",
    "inline_blame": {
      "enabled": true,
      "delay_ms": 200
    }
  },

  "file_types": {
    "Dockerfile": ["Dockerfile", "Dockerfile.*"],
    "YAML": ["sls"],
    "Markdown": ["qmd", "rmd", "md"]
  },
  "file_scan_exclusions": [
    "**/.git",
    "**/.svn",
    "**/.hg",
    "**/CVS",
    "**/.DS_Store",
    "**/Thumbs.db",
    "**/.classpath",
    "**/.settings",
    // above is default from Zed
    "**/out",
    "**/.next",
    "**/_freeze",
    "**/node_modules"
  ],
  "jupyter": {
    "enabled": true,
    "kernel_selections": {
      "typescript": "deno",
      "rust": "rust",
      "R": "ark"
    }
  },
  "journal": {
    "enabled": false,
    "hour_format": "hour24"
  },

  // Language Specific Settings
  "languages": {
    "Markdown": {
      "show_edit_predictions": false
    },
    "Python": {
      "language_servers": ["pyright", "ruff"],
      // Or, if there are other language servers you want to use with Python
      // "language_servers": ["pyright", "ruff"],
      "code_actions_on_format": {
        // Fix all auto-fixable lint violations
        // "source.fixAll.ruff": true,
        // Organize imports
        "source.organizeImports.ruff": true
      },
      "format_on_save": "on",
      "formatter": [
        {
          "language_server": {
            "name": "ruff"
          }
        }
      ]
    },
    "JSON": {
      "wrap_guides": [],
      "use_autoclose": true
    },
    "JSONC": {
      "wrap_guides": [],
      "use_autoclose": true
    },
    "R": {
      // "language_servers": ["air"],
      "format_on_save": "on",
      "tab_size": 2
    },
    "Rust": {},
    "Zig": {},
    "Lua": {},
    "Typst": {
      "soft_wrap": "preferred_line_length",
      "preferred_line_length": 80
    },
    "TypeScript": {
      "tab_size": 4,
      "inlay_hints": {
        "enabled": true,
        "show_parameter_hints": false,
        "show_type_hints": true,
        "show_other_hints": true
      }
    }
  },

  // LSP Settings
  "lsp": {
    "ruff": {
      "initialization_options": {
        "settings": {
          // Ruff server settings goes here
          "lineLength": 80,
          "lint": {
            "extendSelect": ["E", "F", "I"]
          }
        }
      }
    },
    "rust-analyzer": {
      "procMacro": {
        "ignored": [
          // optional:
          // "component",
          "server"
        ]
      }
    }
  }
}
