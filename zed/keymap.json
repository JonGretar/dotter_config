[
  {
    "context": "Workspace",
    "bindings": {
      "shift-alt-j": "terminal_panel::ToggleFocus",
      "ctrl-shift-z": "workspace::ToggleZoom",
      "cmd-shift-o": [
        "projects::OpenRecent",
        {
          "create_new_window": false
        }
      ]
    }
  },
  {
    "context": "Editor",
    "bindings": {
      "alt-h": null // Undefine this shortcut so that I can write the pipe character
    }
  },
  // Window's navigation
  {
    "context": "Dock || Terminal || Editor",
    "bindings": {
      "ctrl-t z": "workspace::ToggleZoom",
      "ctrl-t t": "terminal_panel::ToggleFocus",
      "ctrl-t p": "project_panel::ToggleFocus",
      "ctrl-t g": "git_panel::ToggleFocus",
      "ctrl-t a": "agent::ToggleFocus",

      // Window's motions
      "ctrl-shift-h": "workspace::ActivatePaneLeft",
      "ctrl-shift-l": "workspace::ActivatePaneRight",
      "ctrl-shift-k": "workspace::ActivatePaneUp",
      "ctrl-shift-j": "workspace::ActivatePaneDown",
      "ctrl-shift-left": "workspace::ActivatePaneLeft",
      "ctrl-shift-right": "workspace::ActivatePaneRight",
      "ctrl-shift-up": "workspace::ActivatePaneUp",
      "ctrl-shift-down": "workspace::ActivatePaneDown"
    }
  },
  // *** Panel Configurations ***
  {
    "context": "ProjectPanel && not_editing",
    "bindings": {
      "q": "workspace::ToggleLeftDock"
    }
  },
  {
    "context": "GitPanel",
    "bindings": {}
  },
  {
    "context": "AgentPanel",
    "bindings": {
      "ctrl-\\": "workspace::ToggleRightDock",
      "cmd-k": "workspace::ToggleRightDock"
    }
  },
  // *** VIM Editor ***
  {
    "context": "Editor && VimControl && !menu",
    "bindings": {
      "cmd-shift-o": [
        "projects::OpenRecent",
        {
          "create_new_window": false
        }
      ],
      "space space": "tab_switcher::Toggle",
      "space s b": "tab_switcher::Toggle",
      "space s f": "file_finder::Toggle",
      "space b n": "workspace::NewFile",
      "space b b": "pane::AlternateFile",
      "space b d": "pane::CloseActiveItem",
      "space b q": "pane::CloseInactiveItems",
      "space l g": [
        "task::Spawn",
        { "task_name": "LazyGit", "reveal_target": "center" }
      ],
      "space v": ["task::Spawn", { "task_name": "Preview in Skim" }],
      "alt-k": "editor::MoveLineUp",
      "alt-j": "editor::MoveLineDown",
      "shift-alt-j": "terminal_panel::ToggleFocus",
      "ctrl-w z": "workspace::ToggleZoom",
      "ctrl-w t": "terminal_panel::ToggleFocus",
      "ctrl-w p": "project_panel::ToggleFocus",
      "ctrl-shift-h": "workspace::ActivatePaneLeft",
      "ctrl-shift-l": "workspace::ActivatePaneRight",
      "ctrl-shift-j": "workspace::ActivatePaneDown",
      "ctrl-shift-k": "workspace::ActivatePaneUp",
      "ctrl-shift-left": "workspace::ActivatePaneLeft",
      "ctrl-shift-right": "workspace::ActivatePaneRight",
      "ctrl-shift-down": "workspace::ActivatePaneDown",
      "ctrl-shift-up": "workspace::ActivatePaneUp"
    }
  },
  {
    "context": "VimCount && Editor && VimControl && !menu",
    "bindings": {
      "j": ["vim::Down", { "display_lines": false }],
      "k": ["vim::Up", { "display_lines": false }]
    }
  },
  {
    "context": "vim_mode == normal",
    "bindings": {
      "space i h": "editor::ToggleInlayHints",
      "space g .": "editor::GoToHunk",
      "space g ,": "editor::GoToPreviousHunk",
      "space g h": "editor::ToggleSelectedDiffHunks",
      "space g S": "git::ToggleStaged",
      "space g r": "git::Restore", // "d p"
      "space g s": "git::StageAndNext", // "d u"
      "space g u": "git::UnstageAndNext", // "d shift-u"
      "space g b": "git::Blame",
      "space p": "editor::GoToDiagnostic",
      "space shift-p": "editor::GoToPreviousDiagnostic",
      "space h": "editor::Hover",
      "g b": "tab_switcher::Toggle",
      "alt-w": "vim::NextSubwordStart",
      "alt-b": "vim::PreviousSubwordStart",
      "alt-e": "vim::PreviousSubwordEnd",
      "cmd-alt-k": "editor::AddSelectionAbove",
      "cmd-alt-j": "editor::AddSelectionBelow", // Insert cursor below
      "รฐ": ["vim::PushJump", { "line": false }]
    }
  },
  {
    "context": "vim_mode == visual",
    "bindings": {
      "v": "editor::SelectLargerSyntaxNode",
      "V": "editor::SelectSmallerSyntaxNode",
      "ctrl-s": ["vim::PushAddSurrounds", {}],
      "shift-x": "vim::Exchange"
    }
  },
  {
    "context": "vim_mode == normal || vim_mode == visual",
    "bindings": {
      "s": "vim::PushSneak",
      "shift-s": "vim::PushSneakBackward"
    }
  },
  {
    "context": "vim_mode == insert",
    "bindings": {
      "alt-w": "vim::NextSubwordStart",
      "alt-e": "vim::NextSubwordEnd",
      "alt-b": "vim::PreviousSubwordStart"
    }
  },

  // *** Extension Based Configurations ***

  {
    "context": "Editor && (extension==ex || extension==exs)",
    "bindings": {
      "alt-a": [
        "task::Spawn",
        {
          "task_name": "Fawkes: Choose alternate target",
          "reveal_target": "center"
        }
      ]
    }
  },

  // Text based
  {
    "context": "Editor && (vim_mode == normal || vim_mode == visual) && (extension==md || extension==typ || extension==qmd)",
    "bindings": {
      "j": ["vim::Down", { "display_lines": true }],
      "k": ["vim::Up", { "display_lines": true }]
    }
  },
  // R Code
  {
    "context": "Editor && extension==R",
    "bindings": {
      "ctrl-shift-m": ["workspace::SendKeystrokes", "space |> space"],
      "alt--": ["workspace::SendKeystrokes", "space < - space"]
    }
  },
  // Cell mode for jupyter
  {
    "context": "extension==R || extension==py",
    "bindings": {
      "ctrl-alt-i": ["workspace::SendKeystrokes", "\n# space %%\n"]
    }
  }
]
